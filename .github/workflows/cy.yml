# Define um nome amig√°vel para o workflow, exibido na aba de Actions do GitHub
name: ci  # Workflow de Integra√ß√£o Cont√≠nua (CI)

# Gatilhos que disparam este workflow
on:
  # Dispara o workflow sempre que houver um push na branch principal
  push:
    branches:
      - main  # Apenas na branch 'main'
  # Dispara o workflow para eventos de pull request (abertura, atualiza√ß√£o, reabertura)
  pull_request:

jobs:
  # ==== Job 1: An√°lise de c√≥digo com ESLint ====
  eslint:
    # Especifica o sistema operacional e imagem do runner
    runs-on: ubuntu-22.04  # Runner oficial do GitHub baseado em Ubuntu 22.04

    steps:
      # 1) Clona o reposit√≥rio para o ambiente de execu√ß√£o deste job
      - name: Checkout do reposit√≥rio
        uses: actions/checkout@v3  # A√ß√£o oficial que realiza git clone

      # 2) Instala todas as depend√™ncias do projeto listadas em package.json
      - name: Instalar depend√™ncias
        run: npm install  # Equivalente a 'npm ci' ou 'npm install'

      # 3) Executa o ESLint para verificar padr√µes, erros de sintaxe e estilo
      - name: Executar ESLint
        run: npm run lint  # Deve estar configurado em package.json (ex: "lint": "eslint .")
        # Se o ESLint encontrar problemas, este job falhar√° e bloquear√° os pr√≥ximos jobs dependentes

  # ==== Job 2: Testes E2E Cypress ‚Äì Viewport Desktop ====
  cypress-tests-desktop:
    # Garante que este job s√≥ rode se o 'eslint' passar sem erros
    needs: eslint
    # Mesmo SO para consist√™ncia nos runners
    runs-on: ubuntu-22.04

    steps:
      # 1) Cada job usa workspace isolado, portanto √© preciso novo checkout
      - name: Checkout do reposit√≥rio
        uses: actions/checkout@v3

      # 2) Executa testes end-to-end do Cypress em viewport de desktop
      - name: Rodar testes Cypress no desktop üß™
        uses: cypress-io/github-action@v5  # A√ß√£o oficial do Cypress no GitHub Actions

        # Vari√°veis de ambiente para autentica√ß√£o e Mailosaur (e-mail de teste)
        env:
          CYPRESS_USER_EMAIL: ${{ secrets.CYPRESS_USER_EMAIL }}              # E-mail de login nos testes
          CYPRESS_USER_PASSWORD: ${{ secrets.CYPRESS_USER_PASSWORD }}        # Senha de login nos testes
          CYPRESS_MAILOSAUR_SERVER_ID: ${{ secrets.CYPRESS_MAILOSAUR_SERVER_ID }}  # ID do servidor Mailosaur
          CYPRESS_MAILOSAUR_API_KEY: ${{ secrets.CYPRESS_MAILOSAUR_API_KEY }}      # Chave de API Mailosaur

        with:
          # Comando definido em package.json para rodar todos os testes (desktop)
          command: npm test

  # ==== Job 3: Testes E2E Cypress ‚Äì Viewport Tablet ====
  cypress-tests-tablet:
    needs: eslint  # Tamb√©m depende do sucesso do lint
    runs-on: ubuntu-22.04

    steps:
      # 1) Novo checkout para este job isolado
      - name: Checkout do reposit√≥rio
        uses: actions/checkout@v3

      # 2) Executa testes Cypress em viewport de tablet
      - name: Rodar testes Cypress no tablet üß™
        uses: cypress-io/github-action@v5

        # Credenciais para autentica√ß√£o nos testes (sem Mailosaur, se n√£o for necess√°rio)
        env:
          CYPRESS_USER_EMAIL: ${{ secrets.CYPRESS_USER_EMAIL }}       # E-mail de login
          CYPRESS_USER_PASSWORD: ${{ secrets.CYPRESS_USER_PASSWORD }} # Senha de login

        with:
          # Comando definido em package.json para testes no modo tablet
          command: npm run test:tablet